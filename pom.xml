<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.swiftcart</groupId>
    <artifactId>CCP-assignment</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- The compiler release was downgraded to Java 11 to match your local JRE,
        which caused the UnsupportedClassVersionError. -->
        <maven.compiler.release>11</maven.compiler.release>
        <!-- Corrected the main class to match your actual main class -->
        <exec.mainClass>com.swiftcart.SwiftCartSimulation</exec.mainClass>
    </properties>
    <build>
        <plugins>
            <plugin>
                <!--
                The maven-jar-plugin configures the Main-Class in the JAR's manifest.
                This is required for 'java -jar' to know where to start.
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${exec.mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <!--
                The maven-assembly-plugin creates a single "uber" or "fat" JAR
                that includes all the necessary class files and dependencies.
                This often fixes ClassNotFoundException issues.
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${exec.mainClass}</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
